import numpy as np
import matplotlib.pyplot as plt

# Parameters for simulation
steps = 1000
step_size = 0.1

# Fly's random movement (similar to a random walk with some directional bias)
fly_x, fly_y = [0], [0]
for _ in range(steps):
    angle = np.random.uniform(0, 2 * np.pi)
    bias = np.random.uniform(-0.5, 0.5)  # Bias to simulate environmental factors
    fly_x.append(fly_x[-1] + np.cos(angle) * (step_size + bias))
    fly_y.append(fly_y[-1] + np.sin(angle) * (step_size + bias))

# Air molecule's Brownian motion (random walk with no bias)
molecule_x, molecule_y = [0], [0]
for _ in range(steps):
    angle = np.random.uniform(0, 2 * np.pi)
    molecule_x.append(molecule_x[-1] + np.cos(angle) * step_size)
    molecule_y.append(molecule_y[-1] + np.sin(angle) * step_size)

# Plotting the fly's and air molecule's trajectories
plt.figure(figsize=(10, 5))

# Fly's path
plt.subplot(1, 2, 1)
plt.plot(fly_x, fly_y, color='blue')
plt.title("Fly's Movement Path")
plt.xlabel("X position")
plt.ylabel("Y position")

# Air molecule's path
plt.subplot(1, 2, 2)
plt.plot(molecule_x, molecule_y, color='red')
plt.title("Air Molecule's Brownian Motion")
plt.xlabel("X position")
plt.ylabel("Y position")

plt.tight_layout()
plt.show()
